---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tinyfilemanager
  namespace: data
  labels:
    app.kubernetes.io/instance: tinyfilemanager
    app.kubernetes.io/name: tinyfilemanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: tinyfilemanager
      app.kubernetes.io/name: tinyfilemanager
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: tinyfilemanager
        app.kubernetes.io/name: tinyfilemanager
    spec:
      containers:
        - image: tigerdockermediocore/tinyfilemanager-docker:2.4.3
          imagePullPolicy: Always
          name: tinyfilemanager
          ports:
            - containerPort: 80
              name: http
          volumeMounts:
            - name: config
              mountPath: /app/tinyfilemanager/config.php
              subPath: config.php
            - name: nfs-runtime
              mountPath: /data/runtime
            - name: nfs-storage
              mountPath: /data/storage
            - name: nfs-home-claude
              mountPath: /data/home/claude
            - name: nfs-home-helene
              mountPath: /data/home/helene
      volumes:
        - name: config
          configMap:
            name: tinyfilemanager-config
        - name: nfs-runtime
          persistentVolumeClaim:
            claimName: nfs-runtime
        - name: nfs-storage
          persistentVolumeClaim:
            claimName: nfs-storage
        - name: nfs-home-claude
          persistentVolumeClaim:
            claimName: nfs-home-claude
        - name: nfs-home-helene
          persistentVolumeClaim:
            claimName: nfs-home-helene
      dnsConfig:
        options:
          - name: ndots
            value: "1"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: tinyfilemanager
    app.kubernetes.io/name: tinyfilemanager
  annotations:
    prometheus.io/probe: "true"
    prometheus.io/protocol: tcp
  name: tinyfilemanager
  namespace: data
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/instance: tinyfilemanager
    app.kubernetes.io/name: tinyfilemanager
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: "nginx"
  labels:
    app.kubernetes.io/instance: tinyfilemanager
    app.kubernetes.io/name: tinyfilemanager
  name: tinyfilemanager
  namespace: data
spec:
  rules:
    - host: tinyfilemanager.k3s.xpander.ovh
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: tinyfilemanager
                port:
                  number: 80
  tls:
    - hosts:
        - tinyfilemanager.k3s.xpander.ovh
